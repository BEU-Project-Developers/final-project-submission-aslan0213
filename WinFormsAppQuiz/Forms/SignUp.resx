<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>